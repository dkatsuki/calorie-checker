- each_page_stylesheet_link_tag("admin/form")
- each_page_javascript_import_tag("utility")
javascript:
  window
sass:
  .article_editor
    width: 100%;
    display: flex;
    justify-content: space-between;
    > div
      width: 49%;
    > div:first-child
      textarea
        width: 100%;
        height: 100%;
    > div:last-child
      border: 1px solid gray;
javascript:
  const setDishSelectSearch = () => {
    const searchWordBox = document.querySelector(".dish_search_word_box");
    searchWordBox.onchange = (event) => {
      const createOptionElement = (value, text) => {
        const option = document.createElement("option");
        option.setAttribute("value", value);
        option.textContent = text;
        return(option);
      }

      const callback = (response) => {
        const selectBox = document.querySelector("select.dish_select_box");

        while (selectBox.firstChild) {
          selectBox.removeChild(selectBox.firstChild);
        }

        selectBox.appendChild(createOptionElement(0, '選択してえ'));

        response.forEach((record) => {
          selectBox.appendChild(createOptionElement(record.id, record.name));
        })
      }

      const query = {ruby: event.target.value, to_json_option: {only: ['id', 'name']}}
      window.ajax.get(callback, "/dishes", query);
    }
  }

  const setFetchParsedMarkDown = () => {
    const textarea = document.querySelector(".article_editor textarea");
    const callback = (response) => {
      const container = document.querySelector(".article_editor > div:last-child");
      container.innerHTML = response.html;
    }

    textarea.addEventListener("keydown", (event) => {
      if (event.keyCode !== 13) { return; }
      window.ajax.post(callback, "/admin/dish_articles/parse_markdown", {
        mark_down_text: event.target.value
      });
    })
  }

  window.addEventListener('turbo:load', () => {
    setDishSelectSearch();
    setFetchParsedMarkDown();
  });

- is_new = page_title == "料理記事新規作成"
div.width_80percent.margin_0_auto
  h1 = page_title
  = link_to "一覧に戻る", '/admin/dish_articles'
  = render partial: 'admin/partials/error_messages', locals: {record: @record}
  = form_with url: form_url, scope: :dish_article, local: true, method: form_method, class: 'admin_form' do |f|
    - unless is_new
      = f.hidden_field :dish_id, value: @record.dish.id
    div
      div
        = f.label '料理'
      - if is_new
        div
          = f.select :dish_id, options_for_select(@dishes.pluck(:name, :id).to_a), {prompt: "選択してください"}, {class: 'dish_select_box'}
          = text_field_tag :dish_search_word, '', class: 'dish_search_word_box'
      - else
        div
          p = @record.dish.name
    div
      div
        = f.label '記事内容'
      div.article_editor
        div
          = f.text_area :body, value: @record.body
        div
          = @record.htmlized_body.html_safe
    = f.submit controller.action_name == 'new' ? '作成する' : '更新する'